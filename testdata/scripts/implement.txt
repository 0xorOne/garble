garble build main.go
exec ./main
cmp stdout main.stdout

! binsubstr main$exe 'unexportedMethod' 'privateIface'

-- main.go --
package main

import "fmt"

type T string

func (t T) String() string {
	return "String method for " + string(t)
}

func (t T) unexportedMethod() string {
	return "unexported method for " + string(t)
}

type privateInterface interface {
	privateIface()
}

func (T) privateIface() {}

var _ privateInterface = T("")

func main() {
	fmt.Println(T("foo"))
	fmt.Println(T("foo").unexportedMethod())
}
-- main.stdout --
String method for foo
unexported method for foo

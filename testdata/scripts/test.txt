exec go test -v
stdout 'PASS.*TestFoo'

garble test -c
binsubstr bar.test$exe 'TestFoo' 'TestSeparateFoo'
! binsubstr bar.test$exe 'ImportedVar'

exec ./bar.test -test.v
stdout 'PASS.*TestFoo'
stdout 'PASS.*TestSeparateFoo'

-- go.mod --
module foo.com/bar
-- bar.go --
package bar

func Foo() string { return "Foo" }

var ImportedVar = "imported var value"
-- bar_test.go --
package bar

import (
	"testing"
)

func TestFoo(t *testing.T) {
	t.Log(ImportedVar)
	if Foo() != "Foo" {
		t.FailNow()
	}
}
-- bar_separate_test.go --
package bar_test

import (
	"testing"

	"foo.com/bar"
)

func TestSeparateFoo(t *testing.T) {
	t.Log(bar.ImportedVar)
	if bar.Foo() != "Foo" {
		t.FailNow()
	}
}
-- main_test.go --
package bar

import (
	"os"
	"testing"
)

func TestMain(m *testing.M) {
	os.Exit(m.Run())
}
